{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/Message/MyMessage.jsx","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","hoc/withAuthRedirect.js","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","MyMessage","props","className","s","myMessageItem","messages","myMsg","DialogItem","idDialog","id","to","item","name","user","src","img","alt","Message","msg","maxLength50","maxLengthCreator","AddMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","answerBlock","Field","component","Textarea","placeholder","dialogsTextarea","validate","required","btnSend","Dialogs","state","dialogsPage","dialogsElements","dialogs","map","d","messagesElements","m","myMessagesElements","myMessages","dialogs_wrapper","messagesWrapper","values","addMyMessage","newMessageText","mapStateToPropsForRedirect","isAuth","auth","compose","connect","dispatch","addMyMessageActionCreator","Component","RedirectComponent","this","React"],"mappings":"2FACAA,EAAOC,QAAU,CAAC,gBAAkB,iCAAiC,QAAU,yBAAyB,KAAO,sBAAsB,gBAAkB,iCAAiC,SAAW,0BAA0B,cAAgB,+BAA+B,KAAO,sBAAsB,YAAc,6BAA6B,gBAAkB,iCAAiC,QAAU,2B,8FCalYC,EAXG,SAACC,GAEf,OACI,qBAAKC,UAAWC,IAAEC,cAAlB,SACQ,qBAAKF,UAAWC,IAAEE,SAAlB,SACKJ,EAAMK,W,QCUZC,EAdI,SAACN,GAChB,IAAIO,EAAW,YAAcP,EAAMQ,GACnC,OACI,cAAC,IAAD,CAASC,GAAIF,EAAb,SACI,sBAAKN,UAAWC,IAAEQ,KAAlB,UACKV,EAAMW,KACP,qBAAKV,UAAWC,IAAEU,KAAlB,SACI,qBAAKC,IAAKb,EAAMc,IAAKC,IAAI,aCG9BC,EAXC,SAAChB,GAEb,OACI,qBAAKC,UAAWC,IAAEQ,KAAlB,SACQ,qBAAKT,UAAU,gBAAf,SACKD,EAAMiB,S,iCC+BrBC,EAAcC,YAAiB,IAW/BC,EAAsBC,YAAU,CAACC,KAAM,wBAAjBD,EATL,SAACrB,GACpB,OACI,uBAAMuB,SAAUvB,EAAMwB,aAAcvB,UAAWC,IAAEuB,YAAjD,UACI,cAACC,EAAA,EAAD,CAAOC,UAAWC,IAAUjB,KAAM,iBAAkBkB,YAAY,qBAAqB5B,UAAWC,IAAE4B,gBAAiBC,SAAU,CAACC,IAAUd,KACxI,wBAAQjB,UAAWC,IAAE+B,QAArB,wBAOGC,EA3CC,SAAClC,GAEb,IAAImC,EAAQnC,EAAMoC,YACZC,EAAkBF,EAAMG,QAAQC,KAAI,SAAAC,GAAC,OAAI,cAAC,EAAD,CAAY7B,KAAM6B,EAAE7B,KAAMH,GAAIgC,EAAEhC,GAAeM,IAAK0B,EAAE1B,KAAb0B,EAAEhC,OACpFiC,EAAmBN,EAAM/B,SAASmC,KAAI,SAAAG,GAAC,OAAI,cAAC,EAAD,CAASzB,IAAKyB,EAAEzB,KAAUyB,EAAElC,OACvEmC,EAAqBR,EAAMS,WAAWL,KAAI,SAAAG,GAAC,OAAI,cAAC,EAAD,CAAWrC,MAAOqC,EAAErC,OAAYqC,EAAElC,OAMvF,OACI,sBAAKP,UAAWC,IAAE2C,gBAAlB,UACI,qBAAK5C,UAAWC,IAAEoC,QAAlB,SACKD,IAEL,sBAAKpC,UAAWC,IAAE4C,gBAAlB,UACI,qBAAK7C,UAAWC,IAAEE,SAAlB,SACKqC,IAEL,8BACKE,OAGT,wBACA,cAACvB,EAAD,CAAqBG,SAlBH,SAACwB,GACvB/C,EAAMgD,aAAaD,EAAOE,uB,uDCZ9BC,EAA6B,SAACf,GAAD,MAAY,CACzCgB,OAAQhB,EAAMiB,KAAKD,S,OCeRE,sBACXC,aAdkB,SAACnB,GACnB,MAAO,CACHC,YAAaD,EAAMC,gBAGF,SAACmB,GACtB,MAAO,CACHP,aAAc,SAACC,GACXM,EAASC,YAA0BP,UDPf,SAACQ,GAAe,IACtCC,EADqC,4JAEvC,WACI,OAAKC,KAAK3D,MAAMmD,OACT,cAACM,EAAD,eAAeE,KAAK3D,QADI,cAAC,IAAD,CAAUS,GAAI,eAHV,GACXmD,IAAMH,WAOtC,OADqCH,YAAQJ,EAARI,CAAoCI,KCK9DL,CAGbnB","file":"static/js/3.8b99d43e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs_wrapper\":\"Dialogs_dialogs_wrapper__1N4AX\",\"dialogs\":\"Dialogs_dialogs__38ALU\",\"item\":\"Dialogs_item__1hXd-\",\"messagesWrapper\":\"Dialogs_messagesWrapper__2LRdm\",\"messages\":\"Dialogs_messages__ZU8ob\",\"myMessageItem\":\"Dialogs_myMessageItem__3aUIF\",\"user\":\"Dialogs_user__3rkdZ\",\"answerBlock\":\"Dialogs_answerBlock__21gFe\",\"dialogsTextarea\":\"Dialogs_dialogsTextarea__2z4ER\",\"btnSend\":\"Dialogs_btnSend__1gqjI\"};","import s from \"./../Dialogs.module.css\";\r\nimport React from \"react\";\r\n\r\nconst MyMessage = (props) => {\r\n\r\n    return (\r\n        <div className={s.myMessageItem}>\r\n                <div className={s.messages}>\r\n                    {props.myMsg}\r\n                </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MyMessage;\r\n","import {NavLink} from \"react-router-dom\";\r\nimport s from \"./../Dialogs.module.css\";\r\nimport React from \"react\";\r\n\r\nconst DialogItem = (props) => {\r\n    let idDialog = \"/dialogs/\" + props.id\r\n    return (\r\n        <NavLink to={idDialog}>\r\n            <div className={s.item}>\r\n                {props.name}\r\n                <div className={s.user}>\r\n                    <img src={props.img} alt=\"\"/>\r\n                </div>\r\n            </div>\r\n        </NavLink>\r\n    );\r\n};\r\n\r\nexport default DialogItem;","import s from \"./../Dialogs.module.css\";\r\nimport React from \"react\";\r\n\r\nconst Message = (props) => {\r\n\r\n    return (\r\n        <div className={s.item}>\r\n                <div className=\"message_inner\">\r\n                    {props.msg}\r\n                </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Message;\r\n","import s from \"./Dialogs.module.css\";\r\nimport React from \"react\";\r\nimport MyMessage from \"./Message/MyMessage\";\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Textarea} from \"../Common/FormsControls/FormsControls\";\r\nimport {maxLengthCreator, required} from \"../../utils/validators/validators\";\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    let state = props.dialogsPage;\r\n    const dialogsElements = state.dialogs.map(d => <DialogItem name={d.name} id={d.id} key={d.id} img={d.img}/>);\r\n    const messagesElements = state.messages.map(m => <Message msg={m.msg} key={m.id}/>);\r\n    const myMessagesElements = state.myMessages.map(m => <MyMessage myMsg={m.myMsg} key={m.id}/>);\r\n\r\n    const addNewMessageForm = (values) => {\r\n        props.addMyMessage(values.newMessageText);\r\n    }\r\n\r\n    return (\r\n        <div className={s.dialogs_wrapper}>\r\n            <div className={s.dialogs}>\r\n                {dialogsElements}\r\n            </div>\r\n            <div className={s.messagesWrapper}>\r\n                <div className={s.messages}>\r\n                    {messagesElements}\r\n                </div>\r\n                <div>\r\n                    {myMessagesElements}\r\n                </div>\r\n            </div>\r\n            <div></div>\r\n            <AddMessageFormRedux onSubmit={addNewMessageForm}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst maxLength50 = maxLengthCreator(50)\r\n\r\nconst AddMessageForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit} className={s.answerBlock}>\r\n            <Field component={Textarea} name={\"newMessageText\"} placeholder=\"Enter your message\" className={s.dialogsTextarea} validate={[required, maxLength50]}/>\r\n            <button className={s.btnSend} >Send</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst AddMessageFormRedux = reduxForm({form: \"dialogAddMessageForm\"})(AddMessageForm)\r\n\r\nexport default Dialogs;\r\n","import React from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to={\"/login\"} />\r\n            return <Component {...this.props}/>;\r\n        }\r\n    }\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n    return ConnectedAuthRedirectComponent\r\n}","import {addMyMessageActionCreator} from \"../../redux/dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\n// import React from \"react\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage,\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addMyMessage: (newMessageText) => {\r\n            dispatch(addMyMessageActionCreator(newMessageText))\r\n        }\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect\r\n)(Dialogs);\r\n"],"sourceRoot":""}